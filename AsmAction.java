//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.08.05 at 08:30:26 AM EET 
//


package com.kobil.ssms.asm.ws;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for asmAction.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="asmAction">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="REMOVE_USER"/>
 *     &lt;enumeration value="REMOVE_DEVICE"/>
 *     &lt;enumeration value="CREATE_ACTIVATION_CODE"/>
 *     &lt;enumeration value="REMOVE_ACTIVATION_CODE"/>
 *     &lt;enumeration value="REMOVE_ALL_ACTIVATION_CODES"/>
 *     &lt;enumeration value="LOCK_DEVICE"/>
 *     &lt;enumeration value="UNLOCK_DEVICE"/>
 *     &lt;enumeration value="LOCK_USER"/>
 *     &lt;enumeration value="UNLOCK_USER"/>
 *     &lt;enumeration value="APP_REGISTER"/>
 *     &lt;enumeration value="APP_REACTIVATION"/>
 *     &lt;enumeration value="DEVICE_LOGIN"/>
 *     &lt;enumeration value="ALERT_FROM_CLIENT"/>
 *     &lt;enumeration value="CHANGE_PIN"/>
 *     &lt;enumeration value="ACTIVATION"/>
 *     &lt;enumeration value="LOGIN"/>
 *     &lt;enumeration value="TRANSACTION"/>
 *     &lt;enumeration value="LOGOFF_USER"/>
 *     &lt;enumeration value="DISCONNECT_BY_CLIENT"/>
 *     &lt;enumeration value="DISCONNECT_BY_TIMEOUT"/>
 *     &lt;enumeration value="CLIENT_IDLE"/>
 *     &lt;enumeration value="CLIENT_BID"/>
 *     &lt;enumeration value="DATA_RECEIVED"/>
 *     &lt;enumeration value="EXCHANGE_CAPABILITIES"/>
 *     &lt;enumeration value="VERIFY_PIN"/>
 *     &lt;enumeration value="RESET_RETRYCOUNTER"/>
 *     &lt;enumeration value="DECREASE_RETRYCOUNTER"/>
 *     &lt;enumeration value="DISPLAY_MESSAGE"/>
 *     &lt;enumeration value="SET_PROPERTY"/>
 *     &lt;enumeration value="GET_PROPERTY"/>
 *     &lt;enumeration value="RISK_CHANGED"/>
 *     &lt;enumeration value="CHANGE_USER_PIN"/>
 *     &lt;enumeration value="RESET_PIN"/>
 *     &lt;enumeration value="PERSONALIZE_CERTIFICATE"/>
 *     &lt;enumeration value="UPDATE"/>
 *     &lt;enumeration value="REMOVE_OLD_DEVICE"/>
 *     &lt;enumeration value="DELETE_LOCKED_DEVICE"/>
 *     &lt;enumeration value="CANCEL_TRANSACTION"/>
 *     &lt;enumeration value="REMOVE_PROPERTY"/>
 *     &lt;enumeration value="PUSH_NOTIFICATION"/>
 *     &lt;enumeration value="LOGOFF_DEVICE"/>
 *     &lt;enumeration value="STORED_TRANSACTION_EVICTED"/>
 *     &lt;enumeration value="CHANGE_PIN_SOAP"/>
 *     &lt;enumeration value="OFFLINE_VERIFY_OTP"/>
 *     &lt;enumeration value="OFFLINE_VERIFY_SECURE_SEQUENCE"/>
 *     &lt;enumeration value="DECREASE_RTC_OFFLINE"/>
 *     &lt;enumeration value="P2S_MESSAGE"/>
 *     &lt;enumeration value="NONCE"/>
 *     &lt;enumeration value="OFFLINE_SYNCHRONIZED"/>
 *     &lt;enumeration value="PROPERTIES_ACKNOWLEDGED"/>
 *     &lt;enumeration value="CERTIFICATE_SIGNATURE_REQUEST"/>
 *     &lt;enumeration value="SOAP_VERIFY_PIN"/>
 *     &lt;enumeration value="SET_DEFAULT_DEVICE"/>
 *     &lt;enumeration value="MASS_REACTIVATION"/>
 *     &lt;enumeration value="COPY_PIN"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "asmAction")
@XmlEnum
public enum AsmAction {

    REMOVE_USER("REMOVE_USER"),
    REMOVE_DEVICE("REMOVE_DEVICE"),
    CREATE_ACTIVATION_CODE("CREATE_ACTIVATION_CODE"),
    REMOVE_ACTIVATION_CODE("REMOVE_ACTIVATION_CODE"),
    REMOVE_ALL_ACTIVATION_CODES("REMOVE_ALL_ACTIVATION_CODES"),
    LOCK_DEVICE("LOCK_DEVICE"),
    UNLOCK_DEVICE("UNLOCK_DEVICE"),
    LOCK_USER("LOCK_USER"),
    UNLOCK_USER("UNLOCK_USER"),
    APP_REGISTER("APP_REGISTER"),
    APP_REACTIVATION("APP_REACTIVATION"),
    DEVICE_LOGIN("DEVICE_LOGIN"),
    ALERT_FROM_CLIENT("ALERT_FROM_CLIENT"),
    CHANGE_PIN("CHANGE_PIN"),
    ACTIVATION("ACTIVATION"),
    LOGIN("LOGIN"),
    TRANSACTION("TRANSACTION"),
    LOGOFF_USER("LOGOFF_USER"),
    DISCONNECT_BY_CLIENT("DISCONNECT_BY_CLIENT"),
    DISCONNECT_BY_TIMEOUT("DISCONNECT_BY_TIMEOUT"),
    CLIENT_IDLE("CLIENT_IDLE"),
    CLIENT_BID("CLIENT_BID"),
    DATA_RECEIVED("DATA_RECEIVED"),
    EXCHANGE_CAPABILITIES("EXCHANGE_CAPABILITIES"),
    VERIFY_PIN("VERIFY_PIN"),
    RESET_RETRYCOUNTER("RESET_RETRYCOUNTER"),
    DECREASE_RETRYCOUNTER("DECREASE_RETRYCOUNTER"),
    DISPLAY_MESSAGE("DISPLAY_MESSAGE"),
    SET_PROPERTY("SET_PROPERTY"),
    GET_PROPERTY("GET_PROPERTY"),
    RISK_CHANGED("RISK_CHANGED"),
    CHANGE_USER_PIN("CHANGE_USER_PIN"),
    RESET_PIN("RESET_PIN"),
    PERSONALIZE_CERTIFICATE("PERSONALIZE_CERTIFICATE"),
    UPDATE("UPDATE"),
    REMOVE_OLD_DEVICE("REMOVE_OLD_DEVICE"),
    DELETE_LOCKED_DEVICE("DELETE_LOCKED_DEVICE"),
    CANCEL_TRANSACTION("CANCEL_TRANSACTION"),
    REMOVE_PROPERTY("REMOVE_PROPERTY"),
    PUSH_NOTIFICATION("PUSH_NOTIFICATION"),
    LOGOFF_DEVICE("LOGOFF_DEVICE"),
    STORED_TRANSACTION_EVICTED("STORED_TRANSACTION_EVICTED"),
    CHANGE_PIN_SOAP("CHANGE_PIN_SOAP"),
    OFFLINE_VERIFY_OTP("OFFLINE_VERIFY_OTP"),
    OFFLINE_VERIFY_SECURE_SEQUENCE("OFFLINE_VERIFY_SECURE_SEQUENCE"),
    DECREASE_RTC_OFFLINE("DECREASE_RTC_OFFLINE"),
    @XmlEnumValue("P2S_MESSAGE")
    P_2_S_MESSAGE("P2S_MESSAGE"),
    NONCE("NONCE"),
    OFFLINE_SYNCHRONIZED("OFFLINE_SYNCHRONIZED"),
    PROPERTIES_ACKNOWLEDGED("PROPERTIES_ACKNOWLEDGED"),
    CERTIFICATE_SIGNATURE_REQUEST("CERTIFICATE_SIGNATURE_REQUEST"),
    SOAP_VERIFY_PIN("SOAP_VERIFY_PIN"),
    SET_DEFAULT_DEVICE("SET_DEFAULT_DEVICE"),
    MASS_REACTIVATION("MASS_REACTIVATION"),
    COPY_PIN("COPY_PIN");
    private final String value;

    AsmAction(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AsmAction fromValue(String v) {
        for (AsmAction c: AsmAction.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
